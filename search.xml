<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[在学习Python之前你或许可以多了解一些...]]></title>
    <url>%2Fposts%2F2731280632%2F</url>
    <content type="text"><![CDATA[包括有关计算机结构、计算机网络、编程语言的基础知识的粗略整理计算机结构&#160; &#160; &#160; &#160;提到计算机结构就不得不提冯·诺伊曼这个人，他被称为现代计算机之父，有关这个人和计算机基本单元的知识可以通过一个小说中的故事来生动地了解（节选：《三体》中的人列计算机片段）。当前主流的计算机结构可以说还是当年那个冯·诺伊曼结构，只不过存储器替代了曾经的运算器成为了中心结构。注意这里的计算机的含义是纯粹的、模型的，不直接等同于我们用的电脑，甚至可以说我们日常用的电脑已经是很多计算机的集合体 下面是一张现代计算机结构图：运算器 —— 用来完成算术运算和逻辑运算，并将运算的中间结果暂存在运算器内。存储器 —— 用来存放数据和程序。控制器 —— 用来控制、指挥程序和数据的输入、运行以及处理运算结果。输入设备 —— 用来将人们熟悉的信息形式转换为机器能识别的信息形式。（如键盘、鼠标、麦克风）输出设备 —— 用来将机器运算结果转换为人们熟悉的信息形式。（如打印机输出、显示器输出等、音响输出）再次强调：在讨论五大结构部分的时候，不要考虑PC作例子，更不要考虑操作系统。以五大结构来看，PC已经是一个很复杂的结构了，比如说，存储器可以分为内存、缓存、硬盘和光盘。CPU、GPU、网卡、声卡、南桥和北桥，里面都有独立的五大结构部分。作为一个初学者，把五大结构往PC上生搬硬套是很容易混淆概念的。事实上，单独一个CPU，就已经包含所有五大结构部分了，有输入针脚，输出针脚，CPU缓存等等。在学习这一部分的时候，自己脑子中的系统越简单越好。但是，了解这部分知识仍有必要，它是更高阶知识的基础，比如计算密集型程序和IO密集型程序。它也能帮助我们理解程序运行的原理、拥有更清晰的设计思路。&#160; &#160; &#160; &#160;二十世纪五六十年代以来，随着大规模集成电路制作工艺的出现，考虑到计算机的部件运算器和控制器在逻辑关系和电路结构上联系十分紧密，两大部件被集成在同一芯片上，这类芯片就是我们常说的CPU，即中央处理器。CPU的核心部件由两个单元组成。一个是算术逻辑单元，用来完成算术逻辑运算。另一个是控制单元，用来解释存储器中的指令，并发出各种操作命令来执行指令。&#160; &#160; &#160; &#160;计算的存储器，也被叫作主存储器，现在我们叫它内存，用来存放程序和数据，可以直接与CPU交换信息。和主存储器相对应的是辅助存储器，简称辅存，又称外存，也就是硬盘。 &#160; &#160; &#160; &#160;输入设备和输出设备也常被简称为I/O设备（Input/Output Equipment）。计算机网络&#160; &#160; &#160; &#160;计算机网络学习的核心内容就是网络协议的学习。网络协议是为计算机网络中进行数据交换而建立的规则、标准或者说是约定的集合。因为不同用户的数据终端可能采取的字符集是不同的，两者需要进行通信，必须要在一定的标准上进行。一个很形象地比喻就是我们的语言，我们大天朝地广人多，地方性语言也非常丰富，而且方言之间差距巨大。A地区的方言可能B地区的人根本无法接受，所以我们要为全国人名进行沟通建立一个语言标准，这就是我们的普通话的作用。同样，放眼全球，我们与外国友人沟通的标准语言是英语，所以我们才要苦逼的学习英语。&#160; &#160; &#160; &#160;计算机网络协议同我们的语言一样，多种多样。而ARPA公司与1977年到1979年推出了一种名为ARPANET的网络协议受到了广泛的热捧，其中最主要的原因就是它推出了人尽皆知的TCP/IP标准网络协议。目前TCP/IP协议已经成为Internet中的“通用语言”，它是Internet最基本的协议、Internet国际互联网络的基础，由网络层的IP协议和传输层的TCP协议组成。通俗而言：TCP负责发现传输的问题，一有问题就发出信号，要求重新传输，直到所有数据安全正确地传输到目的地。而IP是给因特网的每一台联网设备规定一个地址。本节的所有内容均来自于[Network] 计算机网络基础知识总结，访问原文以了解更多。网络模型&#160; &#160; &#160; &#160;为了使不同计算机厂家生产的计算机能够相互通信，以便在更大的范围内建立计算机网络，国际标准化组织（ISO）在1978年提出了“开放系统互联参考模型”，即著名的OSI/RM七层模型。其中第四层完成数据传送服务，上面三层面向用户。&#160; &#160; &#160; &#160;除了标准的OSI七层模型以外，常见的网络层次划分还有TCP/IP四层协议以及TCP/IP五层协议，它们之间的对应关系如下图所示：常见网络协议协议名称所在层级作用以太网协议数据链路层物理地址寻址、数据的成帧、流量控制、数据的检错、重发等。IP协议网络层仅仅提供不可靠、无连接的传送服务，包括无连接数据报传输、数据报路由选择和差错控制。TCP协议传输层在数据传输时各种控制功能，负责发现传输的问题，一有问题就发出信号，要求重新传输，还可以对次序乱掉的分包进行顺序控制。UDP协议传输层将部分控制转移到应用程序去处理，自己却只提供作为传输层协议的最基本功能,不进行任何控制DNS协议应用层用来将域名转换为IP地址（也可以将IP地址转换为相应的域名地址）HTTP协议应用层一个简单的请求 - 响应协议，通常运行在TCP之上。专门用来传输 Web 内容。大部分网站都是通过 HTTP 协议来传输 Web 页面、以及 Web 页面上包含的各种东西（图片、CSS 样式、JS 脚本）。扩展阅读：怎样生动描述 TCP 的「三次握手」？全球HTTPS时代已来，你跟上了吗？ 不知道你有没有注意到有些网站的网址以http开头，而另一些是https，现在前者已经越来越少见…DNS污染 / 为什么中国不能有根服务器？ 看看就好，文中不一定是真实的，但是长城的DNS污染和电信公司的DNS劫持可太常见了，steam到现在都还被污染着…HTTP协议的请求方法&#160; &#160; &#160; &#160;后续编写需要网络交互的程序时绕不开的知识点，就是HTTP协议请求方法的使用，不同的请求方法，适用于不同场景，见表：请求方法用途GET请求数据POST提交数据PUT存入数据DELETE删除数据前两者最为常用。其中GET传送的数据量小，不能大于2KB；POST传送的数据量较大，一般被默认为不受限制。案例-帮助理解&#160; &#160; &#160; &#160;在浏览器中输入 https://www.baidu.com 后执行的全部过程。下面详细分析客户端为了访问服务器而执行的一系列关于协议的操作：客户端浏览器通过DNS解析到 www.baidu.com 的 IP 地址 220.181.27.48，通过这个IP地址找到客户端到服务器的路径。客户端浏览器发起一个HTTP会话到 220.161.27.48，然后通过 TCP 进行封装数据包，输入到网络层。在客户端的传输层，把 HTTP 会话请求分成报文段，添加源和目的端口，如服务器使用80端口监听客户端的请求，客户端由系统随机选择一个端口如5000，与服务器进行交换，服务器把相应的请求返回给客户端的5000端口。然后使用IP层的IP地址查找目的端。客户端的网络层不用关系应用层或者传输层的东西，主要做的是通过查找路由表确定如何到达服务器，期间可能经过多个路由器，这些都是由路由器来完成的工作，不作过多的描述，无非就是通过查找路由表决定通过那个路径到达服务器。客户端的链路层，包通过链路层发送到路由器，通过邻居协议查找给定IP地址的MAC地址，然后发送ARP请求查找目的地址，如果得到回应后就可以使用ARP的请求应答交换的IP数据包现在就可以传输了，然后发送IP数据包到达服务器的地址。编程语言&#160; &#160; &#160; &#160;所谓编程语言，其实就是指挥计算机做事的语言。或者说，就是把人话翻译成机器硬件能理解的指令的桥梁。编程语言的发展机器语言--&gt; 汇编语言 --&gt; 高级语言&#160; &#160; &#160; &#160;机器语言（二进制语言，只有0和1，直接操作硬件）和汇编语言（也是直接操作硬件的语言）都是上古语言，简直是天书，除非是在与计算机硬件强相关的行业，否则应该一辈子都见不到他俩的。为了展示天书，以下放一个使用汇编语言在屏幕上输出 “Hello World!”的示例：12345678910111213141516171819202122; hello.asm section .data ; 数据段声明 msg db &quot;Hello, world!&quot;, 0xA ; 要输出的字符串 len equ $ - msg ; 字串长度section .text ; 代码段声明global _start ; 指定入口函数_start: ; 在屏幕上显示一个字符串 mov edx, len ; 参数三：字符串长度 mov ecx, msg ; 参数二：要显示的字符串 mov ebx, 1 ; 参数一：文件描述符(stdout) mov eax, 4 ; 系统调用号(sys_write) int 0x80 ; 调用内核功能 ; 退出程序 mov ebx, 0 ; 参数一：退出代码 mov eax, 1 ; 系统调用号(sys_exit) int 0x80 ; 调用内核功能``` &amp;#160; &amp;#160; &amp;#160; &amp;#160;然后是使用Python做这件事的代码(你没看错，只要一行)：```pythonprint(&quot;Hello World!&quot;)&#160; &#160; &#160; &#160;高级语言才是我们要多关注的，这里的高级指的是距离机器语言较远。由于高级语言的问世，高级语言直接用人能理解的语言和语法风格编写程序，程序猿无序再去考虑复杂的硬件操作啦。(ง •_•)ง&#160; &#160; &#160; &#160;但问题也随之而来，我们用高级语言编写的程序归根结底还是要给计算机执行，但是计算机只认识二进制指令。 这就涉及到一个翻译的过程，我们需要把人用高级语言编写的程序翻译成计算机所能理解的二进制指令才执行，按照翻译方式的不同，高级语言又分为编译型和解释型两大类。高级语言类型编译型：C、C++、C#…&#160; &#160; &#160; &#160;专业解释为：使用专门的编译器，针对特定的平台，将高级语言源代码一次性的编译成可被该平台硬件执行的机器码，并包装成该平台所能识别的可执行性程序的格式，并且只需要编译一次，以后再也不用编译。可以理解成百度翻译，我们把要翻译的文字全部放进去，一次翻译，下次使用直接使用上一次翻译好的结果就行了。优点（较于解释性语言）：执行效率高。缺点（较于解释性语言）：开发效率低。发生bug需要逐行进行检查，写完所有的代码才能检查bug，光排bug都能排一天，太可怕了。⊙﹏⊙∥解释型：Python、Java、Php、Ruby、Javascript…&#160; &#160; &#160; &#160;专业解释为：使用专门的解释器对源程序逐行解释成特定平台的机器码并立即执行，它不需要事先编译，直接将代码解释成机器码直接运行，也就是说只要某一平台提供了相应的解释器即可运行代码（理论上的全平台）。可以理解成同声传译，我们需要翻译的时候，找一个翻译员，我说一句翻译员翻译一句，下次翻译还是需要一个翻译员一句一句的翻译。优点（较于编译型语言）：开发效率高。写一行解释一行，写错了马上就知道，妈妈再也不用担心找不到bug了。(●ˇ∀ˇ●)缺点（较于编译型语言）：执行效率低。每次运行都需要重新解释。扩展阅读：详细对比9门主流编程语言如何用不同的编程语言造一匹马]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[v2ray 备忘录]]></title>
    <url>%2Fposts%2F2731281632%2F</url>
    <content type="text"><![CDATA[整理了我在搭梯子过程中用到的的那些流程、代码和工具，以便突发什么问题后快速重建。或许有的人也能够把它当教程用起来…选购 VPSVulrt（按小时计费）SSR 中文网（墙）Porject-V 官网（墙）服务器可用性端口扫描国内：http://coolaf.com/tool/port国外：https://www.yougetsignal.com/tools/open-ports/服务器 Ping 延迟：https://ping.chinaz.com/Speedtest 测速：https://www.speedtest.net/zh-Hans服务器端部署登陆VPS。个人倾向于使用 win10 自带的OpenSSH，因为无需另下软件，在 可选功能 设置项内添加即可。打开 powershell 运行以下指令进行登陆：1ssh root@ip运行后会提示输入密码，在管理面板复制密码后，右键即会自动粘贴。值得注意的是，无论是粘贴还是手动输入，由于安全方面的需求，默认设置下 poweshell 中的密码均不会显示明文，也不会显示星号。安装 curl 环境：1apt-get update -y &amp;&amp; apt-get install curl -y安装 v2ray.233 一键脚本，安装完成后按照脚本提示操作即可部署，默认设置不懂的无需去改动：1bash &lt;(curl -s -L https://git.io/v2ray.sh)复制部署完成后得到的配置链接，或运行 v2ray url 得到梯子的配置链接，复制以备客户端使用。客户端工具各客户端使用方法都差不多，从剪贴板或扫二维码导入配置信息即可直接使用。需要摸索一丢丢的的也只有PAC代理规则了。WinV2rayN：Github 项目主页 | 一键下载 v2.29AndroidV2rayNG：Github 项目主页 | 一键下载 v1.0.0iOSshadowrocket：iTunes 主页MacV2rayU：Github 项目主页ClashX：Github 项目主页配置密钥（免密登陆）每次登陆都需要输入 ip 和密码实在是麻烦，使用密钥方式免密码快速登陆，安全性也得到了提高。在服务器端生成密钥对：1ssh-keygen修改服务器端 .ssh 文件夹权限，逐行执行以下命令：1234 cd .sshmv id_rsa.pub authorized_keyschmod 600 authorized_keys #修改公钥为只有属主有读写权限（安全考虑）chmod 700 ~/.ssh #修改.SSH目录为只有属主有读、写、执行权限（安全考虑）获取并复制私钥内容，于本地 ~/.ssh/ 目录下新建无后缀文件，并粘贴入私钥内容：1cat /root/.ssh/id_rsa #获取私钥于 ~/.ssh 文件夹下创建config文件，格式如下：12345678910Host [name] HostName [ip/域名] User [root/自创建用户名] IdentityFile [~/.ssh/&lt;私钥文件名&gt;] # 示例： Host ws HostName 45.32.64.234 User root IdentityFile ~/.ssh/key使用密钥登陆服务器：12ssh [name]ssh ws创建订阅使用永久不变的订阅链接作为可能发生变化的配置链接的包装，搭建者的配置变化，上传订阅后，其他人在软件工具中更新订阅即可使用新的配置。注册 Netlify 账号。新建项目。以 V2rayN 为例，选中需要上传到订阅里的配置，右键—批量导出订阅内容至剪贴板。在任意位置新建一个 文件夹 ，在其中创建 index.txt 新文件，把订阅内容粘贴进去，保存，改名为 index.html。将该 文件夹 上传至 Netfily ，在项目页获取订阅地址，发放他人以在客户端工具中添加即可。]]></content>
      <tags>
        <tag>v2ray</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo + Github Pages 搭建个人博客（美化篇）]]></title>
    <url>%2Fposts%2F3871206004%2F</url>
    <content type="text"><![CDATA[能使网站变漂亮的 N 种方法，谁会不心动呢？修改链接文本为蓝色默认的链接文本样式仅仅添加了下划线，不够醒目，在此通过添加 CSS 样式将其样式修改为蓝色 + 下划线打开 \theme\next\source\css\_common\components\post\post.styl 文件，添加如下代码：12345678910.post-body p a&#123; color: #64CEAA; //原始链接颜色 border-bottom: none; border-bottom: 1px solid #64CEAA; //底部分割线颜色 &amp;:hover &#123; color: #fc6423; //鼠标经过颜色 border-bottom: none; border-bottom: 1px solid #fc6423; //底部分割线颜色 &#125; &#125;效果展示：挖掘机哪家强？主题色彩大一统你喜欢主题默认的黑白色吗？喜欢纯白色的网页背景吗？喜欢安卓浏览器搜索框白色与博客顶栏黑色的强对比吗？….或许喜欢，或许不，但你随时可以更改它们。保持打开 \themes\next\source\css\_custom\custom.styl 文件，添加以下代码：12345678910111213141516171819202122232425262728293031323334353637383940414243444546// 网站背景色，建议选择浅色值以便突出展示博客内容 body &#123; background-color:#E0F9F7 ; background-repeat: no-repeat; background-attachment:fixed; background-position:50% 50%; &#125; // //博客名所在方块的样式，不建议修改颜色以外的属性，除非你做好修改了一连串文件的准备 .site-meta &#123; background: #00CCCC; &#125; // 修改按键（button）样式 .btn &#123; color: #00CCCC; background: #fff; border: 2px solid #00CCCC; &#125; // 按键（button）点击时的样式 .btn:hover &#123; border-color: #00CCCC; color: #fff; background: #00CCCC; &#125; // 鼠标移动至文章标题时的效果 .posts-expand .post-title-link::before &#123; content: ""; position: absolute; width: 100%; height: 2px; bottom: 0; left: 0; background-color: #00CCCC; visibility: hidden; -webkit-transform: scaleX(0); -moz-transform: scaleX(0); -ms-transform: scaleX(0); -o-transform: scaleX(0); transform: scaleX(0); transition-duration: 0.2s; transition-timing-function: ease-in-out; transition-delay: 0s; &#125;访问在线取色工具选取你喜欢的颜色的色值，替换上文代码中的色值即可。删去顶栏黑线。打开 \themes\next\source\css\_common\components\header\headerband.styl 文件，修改黑线高度为 height: 0px即可。代码高亮、复制按钮Markdown语法有两种方式标记大代码块，其一是用 tab，其二是用两个三连反引号（英文输入法下，键盘左上角的 ~键）包裹 ：实践发现，只有三连反引号的方式才能实现高亮效果，且必须在第一个三连反引号后面标记上代码的语言名，如上。容易被忽略的高亮语言名：markdown css html yml bash此外，请确保站点配置文件中的如下参数是开启状态：12345highlight: enable: true line_number: true auto_detect: true tab_replace:行内代码块的高亮使用单反引号包裹，其样式可以通过在 \themes\next\source\css\_custom\custom.styl 文件内添加以下代码来自定义：12345code &#123; color: #ff7600; background: #fbf7f8; margin: 2px;&#125;启用主题配置文件中的一下参数来启用代码块的复制按钮：1234copy_button: enable: true # Show text copy result show_result: true效果见本站（说实话不咋滴，聊胜于无）“全文结束”标识符有时候或许不要添加这个标识符比较好？在路径 \themes\next\layout_macro 中新建 passage-end-tag.swig 文件，添加以下代码：123456&lt;div&gt;&#123;% if not is_index %&#125; &lt;div style="text-align:center;color:#A5A2A0;font-size:14px;"&gt; ———— 全文结束，感谢阅读 ———— &lt;/div&gt;&#123;% endif %&#125;&lt;/div&gt;打开 \themes\next\layout_macro\post.swig 文件，在如下 END POST BODY 后的位置添加以下代码即可：123456789&#123;#####################&#125;&#123;### END POST BODY ###&#125;&#123;#####################&#125;&lt;div&gt;&#123;% if not is_index %&#125; &#123;% include 'passage-end-tag.swig' %&#125;&#123;% endif %&#125;&lt;/div&gt;效果见本文。隐藏页尾版本主题修改主题配置文件对应参数即可：1234567891011powered: # Hexo link (Powered by Hexo). enable: false # Version info of Hexo after Hexo link (vX.X.X). version: falsetheme: # Theme &amp; scheme info link (Theme - NexT.scheme). enable: false # Version info of NexT after scheme info (vX.X.X). version: false修改主题预设的文字内容进入 \themes\next\languages\zh-CN.yml 文件，随心所欲进行文字替换即可，建议修改：12归档 → 时间轴日志 → 文章配合上一条使用可以得到个性化的页尾文字展示。特效：点击出现桃心在 \themes\next \ source \ js \ src 目录下创建文件 clicklove.js，添加以下代码：1!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &apos;&apos;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);在 \theme\next\layout\_layout.swig 文件内添加以下代码即可：12&lt;!-- 页面点击小红心 --&gt;&lt;script type="text/javascript" src="/js/src/clicklove.js"&gt;&lt;/script&gt;添加看板娘在站点根目录安装插件：1cnpm install --save hexo-helper-live2d在站点配置文件内添加以下代码：12345678910111213141516171819# live2dlive2d: enable: true scriptFrom: local pluginRootPath: live2dw/ pluginJsPath: lib/ pluginModelPath: assets/ tagMode: false debug: false model: use: live2d-widget-model-wanko # 指定模型 display: #设置位置和宽高 position: right width: 165 height: 330 mobile: show: true # 是否在移动端显示 react: opacity: 0.7 # 不透明度在模型目录中选中一个(只有名字鬼选得出来啊！不知道开发者怎么想的，现在只有17年旧博客的部分模型预览)，运行指令 npm install {packagename} 下载模型。模型下载后，把名字填入上面的 use: 即可。添加豆瓣电影/音乐/游戏页面使用一个插件来爬取你的豆瓣电影/音乐/游戏信息，并将其制作成网页，丰富网站内容。在站点根目录目录安装插件：1$ cnpm install hexo-douban --save在站点配置文件中添加代码：1234567891011121314# 豆瓣插件douban: user: # 个人豆瓣ID builtin: false book: title: 'This is my book title' quote: 'This is my book quote' movie: title: 'This is my movie title' quote: 'This is my movie quote' game: title: 'This is my game title' quote: 'This is my game quote' timeout: 10000user: 填写豆瓣个人 IDtitle&amp;quote: 生成页面后自己对照着修改在主题配置文件中新增书影游菜单：12345678menu: home: / || home tags: /tags/ || tags categories: /categories/ || th archives: /archives/ || tasks books: /books/ || book movies: /movies/ || video-camera games: /games/ || gamepad在语言文件 \themes\next\languages\zh-CN.yml 中添加翻译：12345678menu: home: 首页 archives: 归档 categories: 分类 tags: 标签 movies: 电影 books: 读书 games: 游戏在根目录运行命令生成页面：1234hexo douban #生成书、影、游，三个页面，耗时较长hexo douban -m # 仅生成电影页面hexo douban -b # 仅书籍hexo douban -g #仅游戏据说今后将不能使用 hexo d 来推送了，因为与这里的 douban 缩写存在歧义，需要写成 hexo deploy。使用炫酷标签云（无效）效果预览：mikecoder.github.io进入站点根目录，然后在 package.json 文件中添加：1"hexo-tag-cloud": "2.1.*"继续在根目录执行 npm install 命令，安装该模块。next 主题用户修改 \theme\next\layout\_macro\sidebar.swig 文件，添加以下代码（其他主题请见Githup 项目主页)：123456789101112&#123;% if site.tags.length &gt; 1 %&#125;&lt;script type="text/javascript" charset="utf-8" src="&#123;&#123; url_for('/js/tagcloud.js') &#125;&#125;"&gt;&lt;/script&gt;&lt;script type="text/javascript" charset="utf-8" src="&#123;&#123; url_for('/js/tagcanvas.js') &#125;&#125;"&gt;&lt;/script&gt;&lt;div class="widget-wrap"&gt; &lt;h3 class="widget-title"&gt;Tag Cloud&lt;/h3&gt; &lt;div id="myCanvasContainer" class="widget tagcloud"&gt; &lt;canvas width="250" height="250" id="resCanvas" style="width=100%"&gt; &#123;&#123; list_tags() &#125;&#125; &lt;/canvas&gt; &lt;/div&gt;&lt;/div&gt;&#123;% endif %&#125;通过 hexo clean &amp;&amp; hexo g &amp;&amp; hexo s来进行本地预览，三个指令都需要，且最好不要使用 hexo g -d这类组合命令做法。]]></content>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo + Github Pages 搭建个人博客（进阶篇）]]></title>
    <url>%2Fposts%2F3825168618%2F</url>
    <content type="text"><![CDATA[为“长久运营、持续发布文章”的未来构，,做一些底层结构上的建设，可以说都是必须做的事。文章链接永久化很可能你会数次更改文章题目或者变更文章发布时间，在默认设置下，文章链接都会随之发生改变，不利于搜索引擎收录，也不利于分享。将文章链接唯一化、永久化，才能让分享出去的链接始终能够被访问。这里选用对初始标题 + 时间进行 md5，然后再转 base64，保存在 front-matter 中作为链接的方案。安装插件：1cnpm install hexo-abbrlink --save修改站点配置文件（blog/_config.yml）中的 permalink 值：1permalink: posts/:abbrlink/注意键值对的冒号后一定要有一个英文空格。在文件最后添加上 abblink 配置：1234# abbrlink configabbrlink: alg: crc32 rep: dec预览或推送即可，文章文档的 Front-matter 参数块中会自动出现 abbrlink: 3825168618 这样的字段。网页链接也变为 http://localhost:4000/posts/3818330983/，今后无论怎么修改文章题目或内容，只要不去手动修改 abbrlink 值，链接就将永久不变。首页预览摘要如果你忽视了基础篇中的一个小提示，你可能会发现，尽管首页显示的是一个所有文章的列表，但每一篇文章都是全文显示，等文章数量多这样子浏览起来可不行。更普遍的习惯是启用预览摘要。方法一：手动插入标签（推荐）。在文章编辑时，先编写摘要部分，接着换行输入 &lt;!--more--&gt; ，然后再换行开始编写正文。标签之前的部分将作为摘要显示在首页，之后的部分将作为正文在点击 “阅读更多” 按钮后展示。“阅读更多”按钮通过修改主题配置文件的 read_more_btn: true 来启用。在标签前一空行插入 --- ，即分隔符，使摘要文本与按钮分割开来会让更为美观（缺点是会导致首页文章卡片变长一点）。方法二：固定字数截断。在主题配置文件中进行如下参数设置：123auto_excerpt: enable: true #启用自动摘要 length: 100 #设定摘要字数方法二效果同本站。使用图床插入网络图片现在已经有很多免费/收费图床和方便传图的小工具可选，其便利性远超使用本地图片手动管理，值得每个人都尝试一下。但是，考虑到国内的网络特色，免费的图床往往速度慢，高速的图床往往要求备案，尝试过免费又高速的七牛云，被诱导实名认证开始用之后才告诉你，上传的图片一个月后会自动删除……除非绑定上备过案的域名，这实在是折腾。于是在此推荐简单省事的 Github 图床。新建 Github 仓库，命名例如 img访问 Github Devloper Setting ，点击右上角 Generate New Token，随便命名，勾选repo权限，拉到最下面，点击生成 Token，保存备用（这玩意只出现这一次，丢失只能删除后重建）安装开源图床管理工具 Picgo ，进入图床设置界面填写如下：仓库名填写格式：账户名/仓库名（我的仓库名是 img_bed）；分支名：统一填写 “master”；存储的路径可不填，如果填写 blog/，就会在 repository 下创建一个“blog”文件夹存放图片，否则所有图片都在根目录下；自定义域名也可不填，在上传图片后成功后，PicGo 会将以“自定义域名+上传的图片名”生成的访问链接，放到剪切板上，填写格式必须为：https://raw.githubusercontent.com/用户名/RepositoryName/分支名。配置完成后，使用方法十分简单：复制图片、上传图片、复制 Markdown 代码、粘贴到文章中。请多加思考，必要时查阅 Picgo 项目主页。效果同本站，所有图片均使用 Github 图床，敬请检验。社交链接、图标你或许希望在个人博客中加入自己的微博、知乎、Github 等社交链接以提高自己全平台的访问量，同时这些链接也能够丰富博客的内涵。修改主题配置文件中的相关参数即可（图标来自 Font Awesome，填写从该网站中找到的图标名即可 ）：12345678910111213social: # GitHub: https://github.com/yourname || github # Weibo: https://weibo.com/yourname || weibo # Google: https://plus.google.com/yourname || google # Twitter: https://twitter.com/yourname || twitter # FB Page: https://www.facebook.com/yourname || facebook # VK Group: https://vk.com/yourname || vk # StackOverflow: https://stackoverflow.com/yourname ||stack-overflow # YouTube: https://youtube.com/yourname || youtube # Instagram: https://instagram.com/yourname || instagram # Skype: skype:yourname?call|chat || skype bilibili: https://space.bilibili.com/4680569 || youtube-play # 格式为 自定义名称：链接 || 图标博客菜单的增删、图标自定义方法同理 ，其代码块为主题配置文件的 menu: ，新启用或新自定义的菜单需要运行一条命令来生成对应页面，否则将只能访问到404页面，例如：1hexo new page "tags" # 生成 tags 页面，启用标签菜单个人头像、Logo很难想象一个长期运营的网站没有个人头像和 Logo，头像不但有方圆，还要能旋转！选择一张不要太大的图片，放入主题目录下的 source/images/ 目录下，并重命名为 avatar。打开主题配置文件，修改如下字段：123456# Sidebar Avatar avatar: url: /images/avatar.png rounded: true #是否为圆形头像，否则为方形 opacity: 1 #不透明度，数字越小越透明 rotated: true #开启头像旋转修改网站 Logo 同理，将图片文件放入刚才那个文件夹，然后修改主题配置文件中的对应参数，或修改文件名为既有参数值，总之使链接指向 Logo 文件即可：123favicon: small: /images/favicon-16x16.png medium: /images/favicon-32x32.png站内搜索在站点根目录安装插件：1cnpm install hexo-generator-searchdb --save往站点配置文件内添加以下代码：123456# 本地搜索search: path: search.xml field: post format: html limit: 10000修改主题配置文件中对应参数，即可启用：123# Local searchlocal_search: enable: true字数统计在站点根目录安装插件：1$ cnpm install hexo-symbols-count-time --save在站点配置文件中添加以下代码：123456# 字数统计&amp;阅读时长symbols_count_time: symbols: true # 文章字数 time: false # 阅读时长 total_symbols: true # 所有文章总字数 total_time: false # 所有文章阅读时长为什么我不启用阅读时长？因为人们真的很难做到匀速阅读，除非你的文章是白开水一样的内容。有深度的文章引人停下来思考，教程类文章更是一字一词一空格都要细看。与其放个阅读时间指数在那里引起读者认知失调，不如好好排版让它们看得舒服点。修改主题配置文件中对应参数即可：123456symbols_count_time: separated_meta: true item_text_post: true item_text_total: true awl: 2 #汉字为主则2，英文字母为主则4 wpm: 275文章置顶在站点根目录，先卸载旧插件，然后安装新插件：123$ cnpm uninstall hexo-generator-index --save$ cnpm install hexo-generator-index-pin-top --save添加置顶标识。打开 \themes\next\layout\_macro\post.swig 文件，添加如下代码：12345678 &lt;div class="post-meta"&gt;&lt;!-- 定位到上面标签后，添加开始 --&gt;&#123;% if post.top %&#125; &lt;font color="#1fa67a"&gt;&lt;i class="fa fa-arrow-up"&gt;&lt;/i&gt; &lt;strong&gt;Top&lt;/strong&gt;&lt;/font&gt; &lt;span class="post-meta-divider"&gt;|&lt;/span&gt; &#123;% endif %&#125;&lt;!-- 添加结束 --&gt;在需要置顶的文章 Front-matter部分添加 top: 1 字段，即可置顶该文章，此数字越大的排在越前面，效果如图：添加版权声明修改站点配置文件中的 url 参数使之与你的网站域名一致：123# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: https://evensyell.github.io修改主题配置文件中的以下代码，即可启用：12345creative_commons: license: by-nc-sa #版权种类 sidebar: false #是否在侧栏显示版权声明 post: true #是否在文章底部显示版权声明 language: deed.zh # deed.zh为中文如果需要其他种类的版权，访问知识共享许可介绍了解更多信息。在 \themes\next\source\css\_common\components\post\post-copyright.styl 文件中可修改其样式(i.fa 为版权图标)：1234567891011.post-copyright &#123; margin: $post-copyright.margin; padding: $post-copyright.padding; border-left: $post-copyright.border.width $post-copyright.border.style $post-copyright.border.color; background-color: $post-copyright.bg; list-style: none; font-size: 12px; i.fa &#123; font-size: 12px; &#125;&#125;在线聊天首先注册 Tidio 账号，根据引导填写信息（不必真实，后续都可修改）。进入控制台后，在 SETTINGS -&gt; Developer -&gt; Project data 中获取到 Public Key。在主题配置文件中启用 tidio 并填上刚刚获取到的 key。12345# Tidio online chat# see: https://www.tidiochat.comtidio: enable: true key: # Public_Key新建 themes\next\layout\_custom\custom.swig 文件，填入以下代码：1234&#123;# Tidio 在线联系功能 #&#125;&#123;% if theme.tidio.enable %&#125; &lt;script async src="//code.tidio.co/&#123;&#123; theme.tidio.key &#125;&#125;.js"&gt;&lt;/script&gt;&#123;% endif %&#125;在 \themes\next\layout\_layout.swig 文件最后一长串的 include 后添加一行代码以实现其异步加载：1&#123;% include '_custom/custom.swig' %&#125;重新部署即可使用。聊天工具的样式和文字可以在 tidio 网站的控制面板里修改。图片灯箱目前我们上传的图片是无法点击查看大图等功能的，一个合格的网站应该支持这些功能。借助 fancybox 模块 添加灯箱功能后，点击图片能放大并聚焦图片，并支持幻灯片播放、全屏播放、缩略图、快速分享到社交媒体等功能，效果见下图：首先安装模块，在主题根目录执行以下命令：1$ git clone https://github.com/theme-next/theme-next-fancybox3 source/lib/fancybox将主题配置文件中的 fancybox: true 启用即可，千万要注意是这个参数在插件设置段落里的，而不是内建模块版本里的，后者是用来指定CDN的。压缩提速在站点根目录运行以下代码安装插件：1$ cnpm install hexo-all-minifier --save在站点配置文件中添加以下代码即可启用：# 压缩插件 all_minifier: true ···]]></content>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo + Github Pages 搭建个人博客（基础篇）]]></title>
    <url>%2Fposts%2F1678241867%2F</url>
    <content type="text"><![CDATA[使用免费资源搭建个人博客网站，并发表一篇文章，这样的事每个人都能够做到。环境工具准备运行环境：node.js —— 官网下载版本控制工具：Git —— Github镜像下载静态网页生成器：Hexo —— 在任意命令行(Cmd、PowerShell 或 Git Bash)中输入：1$ cnpm install -g hexo-clicnpm 是从淘宝镜像源进行包管理的指令，用以替代速度极慢的官方的 npm。后续需要运行的一切 npm 指令都可以替换为 cnpm。如果没有，可以运行以下命令安装：1$ npm install -g cnpm --registry=https://registry.npm.taobao.org配置 Github启用 Github Pages我们需要把网站内容放到 Github 的服务器上，即放入一个储存库。而 Github Pages 就是一个使我们的网站内容能够通过域名 username.github.io 被互联网上的所有人访问的功能。登陆 Github选择右上角的 new repository 新建一个储存库。注意：repository name 的格式必须为 username.github.io，这也就是你博客的网址。其中 username 为你的 Github 用户名，填写错误将不能通过 Git 推送更新博客。打开刚刚创建的储存库，进入 setting ，往下拉找到 Github Pages 一项，确保其已经开启，或在随便选择一个 theme 后能够开启，此时你应当已经可以访问 username.github.io。对于复杂或陌生网页上文本信息的寻找和定位，如 “setting”，请善用浏览器的查找功能 Ctrl+F，在文档中也是如此。关联 Git 与 GithubGit 是一个版本控制系统，每次我们在本地电脑上更新了网站内容之后，就需要它来快速便捷地同步到 Github 的服务器上。除此之外，它还有很多很多用途，详情请参见《Git 教程 — 廖雪峰》。在任意位置右键，选择 Git Bush Here，依次输入如下命令以管理 Github 账号：123$ git config --global user.name "你的GitHub用户名"$ git config --global user.email "你的GitHub注册邮箱"$ ssh-keygen -t rsa -C "你的GitHub注册邮箱"第三行命令要求输入密码，该密码用于每次 Git 推送更新时的身份验证，无需密码，直接回车到底即可。创建密钥对。打开电脑的 .ssh 文件夹 ( C:\Users\username\.ssh )，将id_rsa.pub 密钥文件的内容全部复制。打开 github.com/settings/keys 页面，点击 New SSH Key。Title 随便填，将刚才复制的内容粘贴到 Key 一栏，Add，搞定。如此一来今后的 Git 推送将使用密钥的身份验证方式，更安全，也更省心。初尝 HexoHexo 是一个静态网站生成器，其部署在本地后，将生成的网站文件推送至服务器端即可方便快速的更新迭代。在合适位置创建 blog 文件夹，今后博客相关的所有的文件都放这个文件夹。部署 Hexo。在 blog 文件夹内右键打开 Git Bash (后面将省略类似说明)，输入：1$ hexo init # 在当前目录创建 hexo 的实例命令执行的结果一般总有反馈，执行成功或是失败、失败的原因或建议的处理方式，请善用这些信息。顺序：主动理解与思考 &gt;&gt; 百度一下 &gt;&gt; 询问他人。检查 Hexo。输入：12$ hexo g # 生成静态网页$ hexo s # 用本地服务器进行网页预览，在浏览器输入 localhost:4000 查看常用的Hexo命令。1234567$ hexo help #查看所有 hexo 指令和功能$ hexo g #根据当前配置文件生成网页，所有内容存入 blog/public 目录$ hexo s #使可通过 localhost:4000 访问 public 文件夹中的内容，即本地预览已生成的网页$ hexo d #推送 public 内的网页到云端服务器$ hexo g -d #依据当前配置，生成网页并推送$ hexo new "art_name" #新建名为 "art_name" 的新文章$ hexo clean #清除缓存，也清空 public 文件夹内容新建的文章为 .md 格式(Markdown)，存放于 blog/source/_posts/ 。通过 hexo new 命令新建的 .md 文件自带了一个 Front-matter 参数段，如下所示：12345 --- title: Hexo + Github Pages 搭建个人博客（基础篇） date: 2019-05-21 22:12:19 tags: blog---Hexo 通过读取该参数段来获得文章的时间、标题、标签等信息。你也可以在其他位置新建 .md 文件，编辑好内容后放入 _posts 文件夹，只是别忘了手动添加这些参数段。定制站点信息将网站标题、副标题、网站描述等修改成自己的内容。打开 blog/_config.yml 文件，对进行博客个人信息的修改，使之正式成为你自己的博客：12345678# Sitetitle: #博客标题subtitle: #个人简介description: #网站描述keywords: #关键词，用于搜索引擎收录author: #作者名language: zh-CN #设定语言为中文timezone: #时区，无需值站点配置文件（blog/_config.yml）的内容包括站点信息、功能开关、主题和插件配置等等。详情参见 Hexo 官方中文文档。通过 Git 来关联 Hexo 与 Github 储存库。将 blog/_config.yml 文档拉到最下面，将最后一段修改为如下所示。1234deploy: type: git repo: https://github.com/username/username.github.io.git branch: master别忘了替换 username；每个冒号后面必须有一个英文空格今后还会频繁、大量的编辑这种配置文件，一款开启代码高亮的编辑器将能够帮助你节省很多精力和时间。推荐微软的开源编辑器 VS Code ，它免费、轻量、响应快、插件丰富（我甚至用它来写Markdown）发表一篇文章通过 hexo new 命令新建一篇文章，随便命个名比如《春江花月夜》。 进入 blog/_posts/ 文件夹找到它，在里面随便粘贴上点内容，比如：123456789作者：张若虚&lt;!--more--&gt; # 分隔符，以上内容作为摘要出现在博客首页春江潮水连海平，海上明月共潮生。 滟滟随波千万里，何处春江无月明！ 江流宛转绕芳甸，月照花林皆似霰； 空里流霜不觉飞，汀上白沙看不见。 江天一色无纤尘，皎皎空中孤月轮。 江畔何人初见月？江月何年初照人？ 人生代代无穷已，江月年年望相似。保存后在 blog 目录下打开命令行，输入 hexo g - d推送更新。稍等一会后打开自己的博客网址 username.github.io，体会一会儿张若虚的感情吧hh。如果你想修改文章，只需进入该文章对应的 .md 文件进行修改保存，再次 hexo g -d 即可。至此你已完成本教程目标，恭喜。未来？现在你已经学会如何把自己的文章发表在个人博客上，尽管它还不太漂亮，但我们之后可以做更多的事来让它变得更好。这些事情包括：使用第三方主题。Hexo 会根据不同主题来生成个性化的静态页面，访问 Hexo 主题商店 挑选一款合适的博客主题，进入其 Github 页面获取下载命令，在 blog/ 目录下执行安装。本博客所用主题为 next。定制主题内容。主题是影响博客外观最多的角色，阅读你的主题的官方文档，配合网络上各种各样的教程去修改主题配置文件、样式表文件，你几乎可以实现任何效果。优化文章排版。毕竟文章才是博客的核心，熟练使用 Markdown 语法吧，它真的有够简洁，多涉猎一些优秀的排版作品，学习并借鉴其好的用法。例如：代码块的标记，使用反引号的麻烦要远少于使用缩进，尽管看起来它需要多敲几下键盘。]]></content>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
</search>
